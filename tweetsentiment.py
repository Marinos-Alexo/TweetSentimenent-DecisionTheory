# -*- coding: utf-8 -*-
"""TweetSentiment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_2oKsIc0AL-99iEko8BeyQckKAfIFFaG
"""

import pandas as pd
#open source data analysis and manipulation tool
import nltk
# Natural Language Toolkit
import seaborn as sns 
#Library for diagrams
from textblob import TextBlob
#Library for processing textual data
nltk.download('punkt')  
# Natural Language Toolkit

#Read .csv files into train and test data with the right encoding!
train_data = pd.read_csv('/content/SocialMedia_Negative.csv', encoding= 'unicode_escape')
test_data = pd.read_csv('/content/SocialMedia_Positive.csv', encoding= 'unicode_escape')





train_data = train_data[train_data['Sentiment'] != 'Text']

# Analyze the 1st 5 posts of train_data file
train_data.head()

# Info for the train_data file
train_data.info()

# Analyze the 1st 5 posts of test_data file
test_data.head()

# Info for the test_data file
test_data.info()

# Diagram of the train_data file with number of posts and negantive files
sns.countplot(x='Sentiment',data=train_data)

#Function to clean tweets
 #Remove URLs
 #Remove usernames (mentions)
 #Remove special characters EXCEPT FROM :,)
 #Remove Numbers 



def clean_tweets(tweet):
    
    # remove URL
    tweet = re.sub(r"http\S+", "", tweet)
    
    # Remove usernames
    tweet = re.sub(r"@[^\s]+[\s]?",'',tweet)

     # remove special characters 
    tweet = re.sub('[^ a-zA-Z0-9:)]', '', tweet)
    
    # remove Numbers
    tweet = re.sub('[0-9]', '', tweet)
    
    
    
    
    
    return tweet

# Apply function to Text column with clean text
train_data['Text'] = train_data['Text'].apply(clean_tweets)

#Analyze the 1st 5 posts of train_data file after cleaning with Name of column and datatype!
train_data['Text'].head()

# Give text input for testing your post!
# After clean tweet and print it!

y= input("Type your post for analysis:")
x=clean_tweets(y)
print(x)

# Using textblob library for data analysis 
# After sentiment and polarity for calculate the emotion of the post and print it for testing!
text= TextBlob(x)


z = text.sentiment.polarity

print (z)

# Using if statement for printing if it is positive or negative!

if z==0: 
    print("Neutral")
elif z<0:
    print("Negative")
else:
    print("Positive")